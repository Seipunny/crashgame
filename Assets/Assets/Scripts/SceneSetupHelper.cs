using UnityEngine;

/// <summary>
/// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ü–µ–Ω—ã
/// </summary>
public class SceneSetupHelper : MonoBehaviour
{
    [Header("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")]
    public bool autoSetupOnStart = true;
    public bool createTestRunner = true;
    public bool createCompilationTest = false;
    
    private void Start()
    {
        if (autoSetupOnStart)
        {
            SetupTestScene();
        }
    }
    
    /// <summary>
    /// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ü–µ–Ω—É
    /// </summary>
    [ContextMenu("–ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ü–µ–Ω—É")]
    public void SetupTestScene()
    {
        Debug.Log("üîß –ù–ê–°–¢–†–û–ô–ö–ê –¢–ï–°–¢–û–í–û–ô –°–¶–ï–ù–´");
        Debug.Log("=".PadRight(50, '='));
        
        if (createTestRunner)
        {
            CreateMathTestRunner();
        }
        
        if (createCompilationTest)
        {
            CreateCompilationTest();
        }
        
        Debug.Log("‚úÖ –°—Ü–µ–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!");
        Debug.Log("–ù–∞–∂–º–∏—Ç–µ Play –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤.");
    }
    
    /// <summary>
    /// –°–æ–∑–¥–∞–µ—Ç GameObject —Å MathTestRunner
    /// </summary>
    private void CreateMathTestRunner()
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ MathTestRunner
        MathTestRunner existingRunner = FindObjectOfType<MathTestRunner>();
        if (existingRunner != null)
        {
            Debug.Log("‚úÖ MathTestRunner —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å—Ü–µ–Ω–µ");
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π GameObject
        GameObject testRunnerObj = new GameObject("MathTestRunner");
        MathTestRunner runner = testRunnerObj.AddComponent<MathTestRunner>();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
        runner.runTestsOnStart = true;
        runner.rtpTestRounds = 10000;
        runner.showDetailedLogs = true;
        
        Debug.Log("‚úÖ MathTestRunner —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω");
    }
    
    /// <summary>
    /// –°–æ–∑–¥–∞–µ—Ç GameObject —Å CompilationTest
    /// </summary>
    private void CreateCompilationTest()
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ CompilationTest
        CompilationTest existingTest = FindObjectOfType<CompilationTest>();
        if (existingTest != null)
        {
            Debug.Log("‚úÖ CompilationTest —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Å—Ü–µ–Ω–µ");
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π GameObject
        GameObject compilationTestObj = new GameObject("CompilationTest");
        compilationTestObj.AddComponent<CompilationTest>();
        
        Debug.Log("‚úÖ CompilationTest —Å–æ–∑–¥–∞–Ω");
    }
    
    /// <summary>
    /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    /// </summary>
    [ContextMenu("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")]
    public void CheckSetup()
    {
        Debug.Log("üîç –ü–†–û–í–ï–†–ö–ê –ù–ê–°–¢–†–û–ï–ö –°–¶–ï–ù–´");
        Debug.Log("=".PadRight(50, '='));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º MathTestRunner
        MathTestRunner runner = FindObjectOfType<MathTestRunner>();
        if (runner != null)
        {
            Debug.Log($"‚úÖ MathTestRunner –Ω–∞–π–¥–µ–Ω: {runner.name}");
            Debug.Log($"   runTestsOnStart: {runner.runTestsOnStart}");
            Debug.Log($"   rtpTestRounds: {runner.rtpTestRounds}");
            Debug.Log($"   showDetailedLogs: {runner.showDetailedLogs}");
        }
        else
        {
            Debug.Log("‚ùå MathTestRunner –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º CompilationTest
        CompilationTest compilationTest = FindObjectOfType<CompilationTest>();
        if (compilationTest != null)
        {
            Debug.Log($"‚úÖ CompilationTest –Ω–∞–π–¥–µ–Ω: {compilationTest.name}");
        }
        else
        {
            Debug.Log("‚ÑπÔ∏è CompilationTest –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π)");
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–º–µ—Ä—É
        Camera mainCamera = Camera.main;
        if (mainCamera != null)
        {
            Debug.Log($"‚úÖ –ì–ª–∞–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞ –Ω–∞–π–¥–µ–Ω–∞: {mainCamera.name}");
        }
        else
        {
            Debug.Log("‚ùå –ì–ª–∞–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
        }
        
        Debug.Log("=".PadRight(50, '='));
    }
} 