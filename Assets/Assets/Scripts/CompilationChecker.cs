using UnityEngine;

/// <summary>
/// –ü—Ä–æ—Å—Ç–æ–π —á–µ–∫–µ—Ä –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
/// </summary>
public class CompilationChecker : MonoBehaviour
{
    private void Start()
    {
        Debug.Log("üîß –ü–†–û–í–ï–†–ö–ê –ö–û–ú–ü–ò–õ–Ø–¶–ò–ò –í–°–ï–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í");
        Debug.Log("=".PadRight(60, '='));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
        CheckMultiplierCalculator();
        CheckCrashPointGenerator();
        CheckRTPValidator();
        CheckGameManager();
        CheckMathTestRunner();
        
        Debug.Log("=".PadRight(60, '='));
        Debug.Log("‚úÖ –í–°–ï –ö–û–ú–ü–û–ù–ï–ù–¢–´ –°–ö–û–ú–ü–ò–õ–ò–†–û–í–ê–ù–´ –£–°–ü–ï–®–ù–û!");
        Debug.Log("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–ª–Ω—ã–µ —Ç–µ—Å—Ç—ã.");
    }
    
    private void CheckMultiplierCalculator()
    {
        Debug.Log("üßÆ –ü—Ä–æ–≤–µ—Ä—è–µ–º MultiplierCalculator...");
        
        try
        {
            float multiplier1 = MultiplierCalculator.CalculateMultiplier(8f);
            float multiplier2 = MultiplierCalculator.CalculateMultiplier(35f);
            float multiplier3 = MultiplierCalculator.CalculateMultiplier(50f);
            
            Debug.Log($"  ‚úÖ x2 –∑–∞ 8—Å: {multiplier1:F2}");
            Debug.Log($"  ‚úÖ x20 –∑–∞ 35—Å: {multiplier2:F2}");
            Debug.Log($"  ‚úÖ x100 –∑–∞ 50—Å: {multiplier3:F2}");
        }
        catch (System.Exception e)
        {
            Debug.LogError($"  ‚ùå –û—à–∏–±–∫–∞ –≤ MultiplierCalculator: {e.Message}");
        }
    }
    
    private void CheckCrashPointGenerator()
    {
        Debug.Log("üé≤ –ü—Ä–æ–≤–µ—Ä—è–µ–º CrashPointGenerator...");
        
        try
        {
            for (int i = 0; i < 5; i++)
            {
                float crashPoint = CrashPointGenerator.GenerateCrashPoint();
                if (crashPoint >= 1.01f && crashPoint <= 1000f)
                {
                    Debug.Log($"  ‚úÖ –ö—Ä–∞—à {i + 1}: x{crashPoint:F2}");
                }
                else
                {
                    Debug.LogError($"  ‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫—Ä–∞—à: x{crashPoint:F2}");
                }
            }
        }
        catch (System.Exception e)
        {
            Debug.LogError($"  ‚ùå –û—à–∏–±–∫–∞ –≤ CrashPointGenerator: {e.Message}");
        }
    }
    
    private void CheckRTPValidator()
    {
        Debug.Log("üí∞ –ü—Ä–æ–≤–µ—Ä—è–µ–º RTPValidator...");
        
        try
        {
            var result = RTPValidator.ValidateRTP(1000);
            
            Debug.Log($"  ‚úÖ RTP: {result.actualRTP:P4}");
            Debug.Log($"  ‚úÖ –í–∏–Ω—Ä–µ–π—Ç: {result.successRate:P2}");
            Debug.Log($"  ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∫—Ä–∞—à: x{result.maxCrashPoint:F2}");
            
            if (result.actualRTP >= 0.95f && result.actualRTP <= 0.97f)
            {
                Debug.Log("  ‚úÖ RTP –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö (95-97%)");
            }
            else
            {
                Debug.LogWarning($"  ‚ö†Ô∏è RTP –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö –ø—Ä–µ–¥–µ–ª–æ–≤: {result.actualRTP:P4}");
            }
        }
        catch (System.Exception e)
        {
            Debug.LogError($"  ‚ùå –û—à–∏–±–∫–∞ –≤ RTPValidator: {e.Message}");
        }
    }
    
    private void CheckGameManager()
    {
        Debug.Log("üéÆ –ü—Ä–æ–≤–µ—Ä—è–µ–º GameManager...");
        
        try
        {
            // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π GameObject –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            GameObject tempObj = new GameObject("TempGameManager");
            GameManager gameManager = tempObj.AddComponent<GameManager>();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
            if (gameManager.playerBalance > 0)
            {
                Debug.Log($"  ‚úÖ –ë–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞: {gameManager.playerBalance}");
            }
            
            // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
            DestroyImmediate(tempObj);
        }
        catch (System.Exception e)
        {
            Debug.LogError($"  ‚ùå –û—à–∏–±–∫–∞ –≤ GameManager: {e.Message}");
        }
    }
    
    private void CheckMathTestRunner()
    {
        Debug.Log("üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º MathTestRunner...");
        
        try
        {
            // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π GameObject –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            GameObject tempObj = new GameObject("TempMathTestRunner");
            MathTestRunner testRunner = tempObj.AddComponent<MathTestRunner>();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
            Debug.Log($"  ‚úÖ runTestsOnStart: {testRunner.runTestsOnStart}");
            Debug.Log($"  ‚úÖ rtpTestRounds: {testRunner.rtpTestRounds}");
            Debug.Log($"  ‚úÖ showDetailedLogs: {testRunner.showDetailedLogs}");
            
            // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç
            DestroyImmediate(tempObj);
        }
        catch (System.Exception e)
        {
            Debug.LogError($"  ‚ùå –û—à–∏–±–∫–∞ –≤ MathTestRunner: {e.Message}");
        }
    }
} 